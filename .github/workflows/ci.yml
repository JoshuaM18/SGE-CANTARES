name: CI Pipeline Extended - SGE

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: sistema_gestion_educativa
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # 1Ô∏è‚É£ Descargar c√≥digo
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Instalar PHP 8.2 y extensiones necesarias
      - name: Set up PHP 8.2 and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mysqli, mbstring, xml, xdebug, pdo_mysql
          coverage: xdebug

      # 3Ô∏è‚É£ Instalar Composer
      - name: Install Composer
        run: |
          curl -sS https://getcomposer.org/installer | php
          sudo mv composer.phar /usr/local/bin/composer

      # 4Ô∏è‚É£ Esperar a que MySQL est√© listo usando loop
      - name: Wait for MySQL
        env:
          MYSQL_PWD: 1234
        run: |
          echo "Esperando a que MySQL est√© listo..."
          for i in $(seq 1 30); do
            mysql -h 127.0.0.1 -uroot -p$MYSQL_PWD -e "SELECT 1" > /dev/null 2>&1
            if [ $? -eq 0 ]; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL... ($i/30)"
            sleep 2
          done

      # 5Ô∏è‚É£ Crear usuario CI y otorgar permisos
      - name: Configure MySQL user for CI
        env:
          MYSQL_PWD: 1234
        run: |
          mysql -h 127.0.0.1 -uroot -p$MYSQL_PWD -e "CREATE USER IF NOT EXISTS 'ciuser'@'%' IDENTIFIED BY 'ci_pass';"
          mysql -h 127.0.0.1 -uroot -p$MYSQL_PWD -e "GRANT ALL PRIVILEGES ON *.* TO 'ciuser'@'%'; FLUSH PRIVILEGES;"

      # 6Ô∏è‚É£ Ejecutar scripts SQL (tablas y procedimientos)
      - name: Run SQL scripts
        env:
          MYSQL_PWD: ci_pass
        run: |
          mysql -h 127.0.0.1 -uciuser -p$MYSQL_PWD sistema_gestion_educativa < ./sql/procedimientos.sql

      # 7Ô∏è‚É£ Configurar variables de entorno para Conexion.php
      - name: Set environment variables for DB
        run: |
          echo "DB_HOST=127.0.0.1" >> $GITHUB_ENV
          echo "DB_NAME=sistema_gestion_educativa" >> $GITHUB_ENV
          echo "DB_USER=ciuser" >> $GITHUB_ENV
          echo "DB_PASS=ci_pass" >> $GITHUB_ENV

      # 8Ô∏è‚É£ Validaciones b√°sicas de archivos
      - name: Check critical files
        run: |
          for file in index.php conexion.php; do
            if [ ! -f "$file" ]; then echo "$file no encontrado" && exit 1; fi
          done

      # 9Ô∏è‚É£ Test r√°pido de conexi√≥n PHP a MySQL usando variables de entorno
      - name: Test PHP MySQL connection
        run: |
          php -r "
          \$mysqli = new mysqli(getenv('DB_HOST'), getenv('DB_USER'), getenv('DB_PASS'), getenv('DB_NAME'));
          if (\$mysqli->connect_error) { echo 'MySQL connection failed: ' . \$mysqli->connect_error; exit(1); }
          echo 'MySQL connection OK';"

      # üîü Instalar dependencias de Composer
      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist

      # 1Ô∏è‚É£1Ô∏è‚É£ Ejecutar pruebas unitarias con PHPUnit
      - name: Run PHPUnit tests
        run: |
          if [ -f "phpunit.xml" ]; then
            chmod +x ./vendor/bin/phpunit
            ./vendor/bin/phpunit --configuration phpunit.xml --testdox --colors=always --coverage-text
          else
            echo "No phpunit.xml found, skipping tests"
