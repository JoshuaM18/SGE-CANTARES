name: CI Pipeline Extended - SGE

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: sistema_gestion_educativa
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up PHP 8.2 and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mysqli, mbstring, xml
          coverage: none

      - name: Install Composer
        run: |
          curl -sS https://getcomposer.org/installer | php
          sudo mv composer.phar /usr/local/bin/composer

      - name: Wait for MySQL
        run: |
          until mysqladmin ping -h 127.0.0.1 -uroot -p1234 --silent; do
            echo "Waiting for MySQL..."
            sleep 3
          done

      - name: Configure MySQL user for CI
        run: |
          mysql -h 127.0.0.1 -uroot -p1234 -e "CREATE USER IF NOT EXISTS 'ciuser'@'%' IDENTIFIED BY 'ci_pass';"
          mysql -h 127.0.0.1 -uroot -p1234 -e "GRANT ALL PRIVILEGES ON *.* TO 'ciuser'@'%'; FLUSH PRIVILEGES;"

      - name: Run SQL scripts
        run: |
          mysql -h 127.0.0.1 -uciuser -pci_pass sistema_gestion_educativa < ./sql/procedimientos.sql

      - name: Check critical files
        run: |
          for file in index.php conexion.php; do
            if [ ! -f "$file" ]; then echo "$file no encontrado" && exit 1; fi
          done

      - name: Test PHP MySQL connection
        run: |
          php -r "
          \$mysqli = new mysqli('127.0.0.1', 'ciuser', 'ci_pass', 'sistema_gestion_educativa');
          if (\$mysqli->connect_error) { echo 'MySQL connection failed: ' . \$mysqli->connect_error; exit(1); }
          echo 'MySQL connection OK';"

      - name: Run PHPUnit tests
        run: |
          if [ -f "phpunit.xml" ]; then
            composer install --no-interaction --prefer-dist
            ./vendor/bin/phpunit --configuration phpunit.xml --testdox
          else
            echo "No phpunit.xml found, skipping tests"
          fi
